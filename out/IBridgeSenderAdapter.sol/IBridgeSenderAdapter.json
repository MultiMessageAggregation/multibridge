{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "MessageDispatched",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "toChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "dispatchMessage",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "toChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "getMessageFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_dstChainIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_receiverAdapters",
          "type": "address[]"
        }
      ],
      "name": "updateReceiverAdapter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "dispatchMessage(uint256,address,bytes)": "fe39827b",
    "getMessageFee(uint256,address,bytes)": "c7302696",
    "name()": "06fdde03",
    "updateReceiverAdapter(uint256[],address[])": "bbec993c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"MessageDispatched\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"dispatchMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getMessageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_dstChainIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_receiverAdapters\",\"type\":\"address[]\"}],\"name\":\"updateReceiverAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Adapter that connects MultiMessageSender and each message bridge. Message bridge can implement their favourite encode&decode way for MessageStruct.Message.\",\"kind\":\"dev\",\"methods\":{\"dispatchMessage(uint256,address,bytes)\":{\"details\":\"A method for dispatching an individual message to be executed on the toChainId.\"},\"getMessageFee(uint256,address,bytes)\":{\"details\":\"Return native token amount in wei required by this message bridge for sending a message.\"},\"name()\":{\"details\":\"Return name of this message bridge.\"},\"updateReceiverAdapter(uint256[],address[])\":{\"details\":\"Owner update receiver adapter address on dst chain.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBridgeSenderAdapter.sol\":\"IBridgeSenderAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/EIP5164/MessageDispatcher.sol\":{\"keccak256\":\"0x2c3af3ab279ed11a558c5cb979af6445afb03270f9639f7af9defe02c60f8e25\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://64448a7c9a04a3e19c562e5138774a95ec1cbfa08059afc31adec29595369071\",\"dweb:/ipfs/QmVeosB9HqPbref4z9PHQwo3vAuDsJd6xjvziLZefvmfqN\"]},\"src/interfaces/EIP5164/SingleMessageDispatcher.sol\":{\"keccak256\":\"0xacae15783447ba4577af8ba3a0a8efde7288b943741159b8da917bb53bd3d914\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a7f97104ba324542136c0c72ca833c62ea4f88f206b934353bd4ab85ccad1adc\",\"dweb:/ipfs/QmYEpkLrPJkR7erY3iZ28hxoAo24wmdLtbjW4t7t5Th38m\"]},\"src/interfaces/IBridgeSenderAdapter.sol\":{\"keccak256\":\"0xcfe8f29b97c7c040a46e74615fa8a294d084c12de756a6fe53703f3797b1c192\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ef5035dc79bb15052554a6a65a4fa6f33f29d0ed30029330b426054caf3108ed\",\"dweb:/ipfs/QmPXpET2t38tt2a4awZw1QfMR8xzpkoFHYYAiSsdKM8xep\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toChainId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageDispatched",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "toChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "dispatchMessage",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "toChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMessageFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_dstChainIds",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "_receiverAdapters",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateReceiverAdapter"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "dispatchMessage(uint256,address,bytes)": {
            "details": "A method for dispatching an individual message to be executed on the toChainId."
          },
          "getMessageFee(uint256,address,bytes)": {
            "details": "Return native token amount in wei required by this message bridge for sending a message."
          },
          "name()": {
            "details": "Return name of this message bridge."
          },
          "updateReceiverAdapter(uint256[],address[])": {
            "details": "Owner update receiver adapter address on dst chain."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IBridgeSenderAdapter.sol": "IBridgeSenderAdapter"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/EIP5164/MessageDispatcher.sol": {
        "keccak256": "0x2c3af3ab279ed11a558c5cb979af6445afb03270f9639f7af9defe02c60f8e25",
        "urls": [
          "bzz-raw://64448a7c9a04a3e19c562e5138774a95ec1cbfa08059afc31adec29595369071",
          "dweb:/ipfs/QmVeosB9HqPbref4z9PHQwo3vAuDsJd6xjvziLZefvmfqN"
        ],
        "license": "GPL-3.0-only"
      },
      "src/interfaces/EIP5164/SingleMessageDispatcher.sol": {
        "keccak256": "0xacae15783447ba4577af8ba3a0a8efde7288b943741159b8da917bb53bd3d914",
        "urls": [
          "bzz-raw://a7f97104ba324542136c0c72ca833c62ea4f88f206b934353bd4ab85ccad1adc",
          "dweb:/ipfs/QmYEpkLrPJkR7erY3iZ28hxoAo24wmdLtbjW4t7t5Th38m"
        ],
        "license": "GPL-3.0-only"
      },
      "src/interfaces/IBridgeSenderAdapter.sol": {
        "keccak256": "0xcfe8f29b97c7c040a46e74615fa8a294d084c12de756a6fe53703f3797b1c192",
        "urls": [
          "bzz-raw://ef5035dc79bb15052554a6a65a4fa6f33f29d0ed30029330b426054caf3108ed",
          "dweb:/ipfs/QmPXpET2t38tt2a4awZw1QfMR8xzpkoFHYYAiSsdKM8xep"
        ],
        "license": "GPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IBridgeSenderAdapter.sol",
    "id": 8674,
    "exportedSymbols": {
      "IBridgeSenderAdapter": [
        8673
      ],
      "MessageDispatcher": [
        8570
      ],
      "SingleMessageDispatcher": [
        8621
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:862:51",
    "nodes": [
      {
        "id": 8640,
        "nodeType": "PragmaDirective",
        "src": "42:24:51",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 8641,
        "nodeType": "ImportDirective",
        "src": "68:47:51",
        "nodes": [],
        "absolutePath": "src/interfaces/EIP5164/SingleMessageDispatcher.sol",
        "file": "./EIP5164/SingleMessageDispatcher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8674,
        "sourceUnit": 8622,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8673,
        "nodeType": "ContractDefinition",
        "src": "292:611:51",
        "nodes": [
          {
            "id": 8650,
            "nodeType": "FunctionDefinition",
            "src": "420:54:51",
            "nodes": [],
            "documentation": {
              "id": 8645,
              "nodeType": "StructuredDocumentation",
              "src": "356:59:51",
              "text": " @dev Return name of this message bridge."
            },
            "functionSelector": "06fdde03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "429:4:51",
            "parameters": {
              "id": 8646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:2:51"
            },
            "returnParameters": {
              "id": 8649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8650,
                  "src": "459:13:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8647,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:15:51"
            },
            "scope": 8673,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8662,
            "nodeType": "FunctionDefinition",
            "src": "597:107:51",
            "nodes": [],
            "documentation": {
              "id": 8651,
              "nodeType": "StructuredDocumentation",
              "src": "480:112:51",
              "text": " @dev Return native token amount in wei required by this message bridge for sending a message."
            },
            "functionSelector": "c7302696",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMessageFee",
            "nameLocation": "606:13:51",
            "parameters": {
              "id": 8658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8653,
                  "mutability": "mutable",
                  "name": "toChainId",
                  "nameLocation": "628:9:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 8662,
                  "src": "620:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8655,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "647:2:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 8662,
                  "src": "639:10:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8657,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "666:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 8662,
                  "src": "651:19:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8656,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "619:52:51"
            },
            "returnParameters": {
              "id": 8661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8662,
                  "src": "695:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "694:9:51"
            },
            "scope": 8673,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8672,
            "nodeType": "FunctionDefinition",
            "src": "790:111:51",
            "nodes": [],
            "documentation": {
              "id": 8663,
              "nodeType": "StructuredDocumentation",
              "src": "710:75:51",
              "text": " @dev Owner update receiver adapter address on dst chain."
            },
            "functionSelector": "bbec993c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateReceiverAdapter",
            "nameLocation": "799:21:51",
            "parameters": {
              "id": 8670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8666,
                  "mutability": "mutable",
                  "name": "_dstChainIds",
                  "nameLocation": "840:12:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 8672,
                  "src": "821:31:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8664,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "821:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8665,
                    "nodeType": "ArrayTypeName",
                    "src": "821:9:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8669,
                  "mutability": "mutable",
                  "name": "_receiverAdapters",
                  "nameLocation": "873:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 8672,
                  "src": "854:36:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8667,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "854:7:51",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8668,
                    "nodeType": "ArrayTypeName",
                    "src": "854:9:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "820:71:51"
            },
            "returnParameters": {
              "id": 8671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:0:51"
            },
            "scope": 8673,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8643,
              "name": "SingleMessageDispatcher",
              "nameLocations": [
                "326:23:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8621,
              "src": "326:23:51"
            },
            "id": 8644,
            "nodeType": "InheritanceSpecifier",
            "src": "326:23:51"
          }
        ],
        "canonicalName": "IBridgeSenderAdapter",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 8642,
          "nodeType": "StructuredDocumentation",
          "src": "117:174:51",
          "text": " @dev Adapter that connects MultiMessageSender and each message bridge.\n Message bridge can implement their favourite encode&decode way for MessageStruct.Message."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          8673,
          8621,
          8570
        ],
        "name": "IBridgeSenderAdapter",
        "nameLocation": "302:20:51",
        "scope": 8674,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-only"
  },
  "id": 51
}